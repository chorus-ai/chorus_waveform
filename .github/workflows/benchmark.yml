name: Benchmark new formats

on:
  pull_request:
    paths:
      - 'waveform_benchmark/formats/**'
      
jobs:
  benchmark-new-formats:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: ["3.10"]

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install flake8 pytest
          pip install -r requirements.txt

      - name: Find new or modified benchmark files
        id: find-formats
        run: |
          git fetch origin main
          FILES=$(git diff --diff-filter=AM --name-only origin/main...HEAD 'waveform_benchmark/formats/*.py')
          echo "$FILES" > format_files.txt
          cat format_files.txt
          
      - name: Run benchmark tests on new or modified format files
        run: |
          FORMAT_FILES=$(cat format_files.txt)
          if [ -z "$FORMAT_FILES" ]; then
            echo "No format files found to process."
            exit 0
          fi
          IFS=' ' read -ra FILES <<< "$FORMAT_FILES"
          RECORD_NAME="./data/waveforms/mimic_iv/waves/p169/p16955095/82284982/82284982"
          for file in "${FILES[@]}"
          do
            # Skip base.py file
            if [[ "$file" == *"base.py" ]]; then
                echo "Skipping benchmark for $file"
                continue
            fi

            # Extract the module path from the file path
            MODULE_PATH=$(echo "$file" | sed 's/\//./g' | sed 's/\.py$//')

            # Find and list all classes in the module
            echo "Running benchmarks for classes in $MODULE_PATH"
            CLASSES=$(python3 -c "import sys; import inspect; from importlib import import_module; mod = import_module('$MODULE_PATH'); print(' '.join(cls for cls, obj in inspect.getmembers(mod, inspect.isclass) if obj.__module__ == mod.__name__))")
            IFS=' ' read -ra CLS <<< "$CLASSES"

            for cls in "${CLS[@]}"
            do
              CLASS_PATH="$MODULE_PATH.$cls"
              FILENAME="benchmark_results_${cls}.txt"
              echo "Benchmarking $CLASS_PATH"
              ./waveform_benchmark.py -r "$RECORD_NAME" -f "$CLASS_PATH" > "$FILENAME"
            done
          done

      - name: Post results to pull request
        run: |
          cat benchmark_results_*.txt > final_results.txt
          echo "Benchmark results:"
          cat final_results.txt

    #   - uses: unsplash/comment-on-pr@master
    #     if: steps.find-formats.outputs.format_files != ''
    #     env:
    #       GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #     with:
    #       msg: "${{ readFile('final_results.txt') }}"
